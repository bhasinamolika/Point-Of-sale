/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pos_oct;

import escpos.EscPos;
import escpos.EscPosConst;
import escpos.Style;
import java.awt.Image;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.print.PrintService;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;
import output.PrinterOutputStream;

/**
 *
 * @author amolika
 */
public class cashierManageCart extends javax.swing.JFrame {

    /**
     * Creates new form cashierManageCart
     */
       tablemodel tm=new tablemodel();
    public cashierManageCart() {
        initComponents();
        setSize(900,900);
                    jTable1.setModel(tm);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jimg = new javax.swing.JLabel();
        jname = new javax.swing.JLabel();
        jprice = new javax.swing.JLabel();
        joprice = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jmobile = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jqty = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jgrandtotal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setText("Product_name");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(33, 52, 144, 42);
        getContentPane().add(jTextField1);
        jTextField1.setBounds(220, 50, 220, 50);

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(560, 50, 170, 50);

        jPanel1.setLayout(null);

        jimg.setText("Image ");
        jimg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(jimg);
        jimg.setBounds(42, 16, 170, 120);

        jname.setText("Name");
        jPanel1.add(jname);
        jname.setBounds(398, 37, 127, 28);

        jprice.setText("Price");
        jPanel1.add(jprice);
        jprice.setBounds(398, 83, 144, 26);

        joprice.setText("Offer_price");
        jPanel1.add(joprice);
        joprice.setBounds(398, 127, 144, 25);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(40, 130, 720, 170);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(20, 360, 770, 190);

        jLabel6.setText("Enter Mobile Number :");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(10, 650, 180, 30);
        getContentPane().add(jmobile);
        jmobile.setBounds(150, 640, 240, 50);

        jButton2.setText("Checkout");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(420, 640, 180, 50);

        jButton3.setText("Remove Cart");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(620, 640, 190, 50);

        jLabel7.setText("Enter Quantity");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(70, 310, 170, 30);
        getContentPane().add(jqty);
        jqty.setBounds(330, 300, 200, 50);

        jButton4.setText("Add");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(570, 300, 170, 50);

        jgrandtotal.setText("GrandTotal:");
        getContentPane().add(jgrandtotal);
        jgrandtotal.setBounds(530, 580, 230, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String Product_name=jTextField1.getText();
        if(Product_name.isEmpty()){
            JOptionPane.showMessageDialog(rootPane,"All fields Required");
            
        }
        else{
            try{
                
                ResultSet rs=DbLoader.executestatment("Select * from products where product_name Like '%"+Product_name+"%'");
                if(rs.next()){
                    pname=rs.getString("product_name");
                    img=rs.getString("Photo");
                    ImageIcon icon = new ImageIcon(img);
                    Image img = icon.getImage();
                    Image newimg = img.getScaledInstance(jimg.getWidth(), jimg.getHeight(), Image.SCALE_SMOOTH);
                    jimg.setIcon(new ImageIcon(newimg));
                    price=rs.getInt("price");
                    offer_price=rs.getInt("offer_price");
                    pid=rs.getInt("pid");
                    
                    jname.setText(pname);
                    jprice.setText(price+"");
                    joprice.setText(offer_price+"");
                    
                }
                else{
                    JOptionPane.showMessageDialog(rootPane, "No Product found");
                }
            }
            catch(Exception e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
/*
    public boolean isEntry(int pid){
        int rowcount=jTable1.getRowCount();
        String row=null,tid=null,input=pid+"";
        for(int i=0;i<rowcount-1;i++){
            tid=(String)jTable1.getValueAt(i,0);
            row=tid;
            if(input.equalsIgnoreCase(row)){
                return true;
            }
        }
        return false;
    }*/
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String qty1=jqty.getText();
        
        
        if(qty1.isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Please Enter Quantity");
        }
        else{
            qty=Integer.parseInt(qty1);
            
                boolean flag = false;
                int pos = 0;
                for (int i = 0; i < al.size(); i++) {
                    if(al.get(i).pid == pid){
                       
                        pos = i;
                        flag= true;
                        break;
                    }
                }
                
                if(flag){
                    int t  = al.get(pos).qty;
                    t = t+qty;
                    al.get(pos).qty=t;
                }
            
            
                
                else{
                
                
            al.add(new cartDetails(pid,offer_price,price,qty,(offer_price*qty),pname));
                }
         
            //System.out.println(al.size());
                    tm.fireTableDataChanged();
                    jgrandtotal.setText(Integer.toString(grandtotal()));

        }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int ans = jTable1.getSelectedRow();
        
        if(ans <0){
                        JOptionPane.showMessageDialog(rootPane, "Please Select a Row");

        }else {
                        al.remove(ans);

        }
        tm.fireTableDataChanged();
     
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String Mobile=jmobile.getText();
        if(Mobile.isEmpty()|| Mobile.length()!=10 || !Mobile.matches("[0-9]+")){
            JOptionPane.showMessageDialog(rootPane, "Please Enter a Valid mobile number");
        }
        else{
            try{
                
                ResultSet rs=DbLoader.executestatment("Select * from bill");
                
                
                    rs.moveToInsertRow();
                    rs.updateString("Mobile_number",Mobile );
                    rs.updateInt("Total_bill", (offer_price*qty));
                    rs.insertRow();
                    
                    ResultSet rs1=DbLoader.executestatment("Select MAX(bill_id) as billid from bill");
                    int billid;
                    if(rs1.next())
                    {
                        billid=rs1.getInt("billid");
                    }
                    
                    
                    ResultSet rs2=DbLoader.executestatment("select * from billdetail");
                    
                    for(int i=0;i<al.size();i++)
                    {
                        rs2.moveToInsertRow();
                        rs2.updateInt("pid",al.get(i).pid);
                        rs2.updateString("name",al.get(i).pname);
                        rs2.updateInt("price",al.get(i).price);
                        rs2.updateInt("offer_price",al.get(i).offer_price);
                        rs2.updateInt("Totalprice",al.get(i).offer_price*qty);
                        rs2.updateInt("BillID",rs1.getInt("billid") );
                        rs2.insertRow();
                    }
                    JOptionPane.showMessageDialog(rootPane, "Bill created");
                   // printBill();
                
            }
            catch(Exception e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    int grandtotal(){
        int sum=0;
        for(int i=0;i<al.size();i++){
            sum+=(al.get(i).offer_price)*(al.get(i).qty);
        }
        return sum;
    }
    /**
     * @param args the command line arguments
     */
    class tablemodel extends AbstractTableModel {

        String names[] = {"pid","product_name","offer_price","Quantity","Total_price"};

        public int getRowCount() {
            return al.size();
        }

        public int getColumnCount() {
            return 4;
        }

        public Object getValueAt(int rowIndex, int columnIndex) {
            if (columnIndex == 0) {
                return al.get(rowIndex).pid;
            } else if (columnIndex == 1) {
                return al.get(rowIndex).pname;
            } else if(columnIndex==2){
                return al.get(rowIndex).offer_price;
            }
            else if(columnIndex==3){
                return al.get(rowIndex).qty;
            }
            else if(columnIndex==4){
                return al.get(rowIndex).total_price;
            }
            
            return null;
        }

        public String getColumnName(int columnIndex) {
            return names[columnIndex];
        }

    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cashierManageCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cashierManageCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cashierManageCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cashierManageCart.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cashierManageCart().setVisible(true);
            }
        });
    }
    int price;
    int offer_price;
    String img;
    String pname;
    int pid,qty;
    ArrayList<cartDetails> al=new ArrayList<>();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel jgrandtotal;
    private javax.swing.JLabel jimg;
    private javax.swing.JTextField jmobile;
    private javax.swing.JLabel jname;
    private javax.swing.JLabel joprice;
    private javax.swing.JLabel jprice;
    private javax.swing.JTextField jqty;
    // End of variables declaration//GEN-END:variables



     void printBill() {
        try {

            PrintService printService = PrinterOutputStream.getPrintServiceByName("THERMAL Receipt Printer");
            PrinterOutputStream printerOutputStream = new PrinterOutputStream(printService);
            EscPos escpos = new EscPos(printerOutputStream);
            Style header = new Style()
                    .setFontSize(Style.FontSize._2, Style.FontSize._2)
                    .setJustification(EscPosConst.Justification.Center)
                    .setBold(true)
                    .setColorMode(Style.ColorMode.WhiteOnBlack);

            Style address = new Style()
                    .setFontName(Style.FontName.Font_A_Default)
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Center);
            escpos.writeLF(header, " SOCH ");
            escpos.writeLF(address, "56 Ranjit avenue Amritsar");
            escpos.writeLF(address, "9844823331");
//            escpos.writeLF(address, "GSTIN : 23AADGS334SDZDT");
//            escpos.writeLF(address, "Vat No : 94832848349");
            escpos.writeLF(address, "10-11-2021");
            escpos.writeLF(address, "Counter No. 120");
            escpos.writeLF(address, "    ");
            escpos.writeLF(address, "    ");

//            QRCode qrCode = new QRCode()
//                    .setSize(5)
//                    .setModel(QRCode.QRModel._2)
//                    .setJustification(EscPosConst.Justification.Center);
//
//            escpos.write(qrCode, "QR Code");
//
//            escpos.writeLF(address, "    ");
//            BarCode barcode = new BarCode();
//            barcode.setJustification(EscPosConst.Justification.Center);
//            barcode.setHRIPosition(BarCode.BarCodeHRIPosition.BelowBarCode);
//            escpos.write(barcode, "7239409840");
//            escpos.writeLF(address, "    ");
//            GraphicsImageWrapper imageWrapper = new GraphicsImageWrapper();
//            imageWrapper.setJustification(EscPosConst.Justification.Center);
//            
//            BitonalThreshold bod = new BitonalThreshold();
//            BufferedImage bimg = ImageIO.read(new File("src/images/goku.png"));
//            EscPosImage escPos = new EscPosImage(bimg, bod);
//            escpos.write(imageWrapper, escPos);
//
////            BitonalThreshold bt = new BitonalThreshold();
            Style lineStyle = new Style()
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Center);

            escpos.writeLF(lineStyle, "----------------------------------------");

            Style rightText = new Style()
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Right);

            Style leftText = new Style()
                    .setFontSize(Style.FontSize._1, Style.FontSize._1)
                    .setJustification(EscPosConst.Justification.Left_Default);

            escpos.writeLF(rightText, "Bill No : " + 0);

            escpos.write(leftText, "Cashier: casher1      ");
            escpos.write(rightText, "TYPE : TAKE AWAY    ");
            escpos.writeLF(lineStyle, "----------------------------------------");
            escpos.writeLF(lineStyle, "----------------------------------------");

            escpos.writeLF(leftText, "Food Items");
            escpos.writeLF(lineStyle, "----------------------------------------");
            escpos.write(leftText, "Item                           Rate                     Qty                      Price     ");
            escpos.writeLF(lineStyle, "----------------------------------------");
            System.out.println("Details");
            for (cartDetails c : al) {
                escpos.write(leftText, c.pname + "        " + c.price + "     " + c.qty + "           " + c.total_price+"       ");
//                System.out.println(c.name + "       " + c.price + " " + c.quantity + "  " + c.totalprice);

            }
            int TotalBill=Integer.parseInt(jgrandtotal.getText());
            escpos.writeLF(lineStyle, "----------------------------------------");
            escpos.writeLF(leftText, "        FOOD Amount    " + TotalBill);
            escpos.writeLF(lineStyle, "----------------------------------------");
            escpos.writeLF(lineStyle, "----------------------------------------");

            escpos.feed(5);
            escpos.cut(EscPos.CutMode.PART);
            escpos.close();

        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

    }


}
